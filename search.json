[{"title":"Hello World","url":"/2025/06/02/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":["Hexo"],"tags":["Hexo"]},{"title":"HTML 笔记","url":"/2025/06/01/notes/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/html/","content":"目录\n目录\n一、标题标签\n二、段落标签\n三、图片标签\n四、超文本链接标签\n五、文本标签\n六、列表标签\n七、表格标签\n八、表单标签\n九、块元素与内联元素\n常见块元素\n常见内联元素\n内联块元素\n\n\n十、容器元素\n\n\n\n\n一、标题标签示例\n&lt;h1&gt;一级标题&lt;/h1&gt;&lt;h2&gt;二级标题&lt;/h2&gt;&lt;h3&gt;三级标题&lt;/h3&gt;&lt;h4&gt;四级标题&lt;/h4&gt;&lt;h5&gt;五级标题&lt;/h5&gt;&lt;h6&gt;六级标题&lt;/h6&gt;\n\n快捷输入：\n\nh1+Tab&#x2F;Enter 自动补全\nh$*6 生成 h1-h6\n\n属性说明：\n\nalign 设置位置：center（默认）、left、right\n\n\n二、段落标签示例\n&lt;p&gt;这是段落&lt;/p&gt;&lt;p&gt;段落中&lt;br /&gt;加换行&lt;/p&gt;&lt;hr color=&quot;&quot; width=&quot;&quot; size=&quot;&quot; align=&quot;&quot;&gt;\n\n快捷输入：\n\np+Tab&#x2F;Enter\nbr+Tab&#x2F;Enter\nhr+Tab&#x2F;Enter\n\n属性说明：\n\n&lt;hr&gt;属性\ncolor 颜色\nwidth 宽度（px 或 %）\nalign 位置：center（默认）、left、right\n\n\n\n\n三、图片标签示例\n&lt;img src=&quot;1.png&quot; alt=&quot;壁纸&quot; width=&quot;300px&quot; height=&quot;200px&quot; title=&quot;壁纸&quot;/&gt;\n\n快捷输入：\n\nimg+Tab&#x2F;Enter\n\n属性说明：\n\nsrc 路径（绝对&#x2F;相对&#x2F;网络）\nalt 图片信息（图片加载异常时显示）\nwidth 宽度\nheight 高度（建议只指定宽度防止比例失调）\ntitle 鼠标悬停提示\n\n\n四、超文本链接标签示例\n&lt;a href=&quot;https://yuanbao.tencent.com/chat/&quot;&gt;里面可以是文本或嵌套图片&lt;/a&gt;\n\n快捷输入：\n\na+Tab&#x2F;Enter\n\n属性说明：\n\nhref 指向网站链接\n\n\n五、文本标签示例\n&lt;em&gt;加重语气+斜体效果&lt;/em&gt;&lt;i&gt;斜体效果&lt;/i&gt;&lt;b&gt;加粗文本&lt;/b&gt;&lt;strong&gt;强调语气+加粗文本&lt;/strong&gt;&lt;span&gt;普通文本&lt;/span&gt;&lt;del&gt;删除的文本&lt;/del&gt;\n\n快捷输入：\n\nem&#x2F;i&#x2F;b&#x2F;strong&#x2F;span&#x2F;del + Tab&#x2F;Enter\n\n\n六、列表标签示例\n&lt;ol type=&quot;1&quot;&gt;\t&lt;li&gt;列表项1&lt;/li&gt;\t&lt;li&gt;列表项2&lt;/li&gt;\t&lt;li&gt;列表项3&lt;/li&gt;\t&lt;li&gt;列表项4&lt;/li&gt;\t&lt;li&gt;列表项5&lt;/li&gt;&lt;/ol&gt;&lt;ul type=&quot;disc&quot;&gt;\t&lt;li&gt;列表项1&lt;/li&gt;\t&lt;li&gt;列表项2&lt;/li&gt;\t&lt;li&gt;列表项3&lt;/li&gt;\t&lt;li&gt;列表项4&lt;/li&gt;\t&lt;li&gt;列表项5&lt;/li&gt;&lt;/ul&gt;\n\n快捷输入：\n\nol&#x2F;ul+Tab&#x2F;Enter\nol&gt;li*5&#x2F;ul&gt;li*5 一键生成列表\n\n属性说明：\n\n&lt;ol&gt; type：1（数字）、a（小写字母）、A（大写字母）、i（小写罗马）、I（大写罗马）\n&lt;ul&gt; type：disc（默认实心圆）、circle（空心圆）、square（小方块）、none（不显示）\n\n\n七、表格标签示例\n&lt;table border=&quot;1px&quot; width=&quot;50%&quot; height=&quot;100%&quot;&gt;\t&lt;tr&gt;\t\t&lt;td&gt;表格单元格1&lt;/td&gt;\t\t&lt;td&gt;表格单元格2&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;表格单元格3&lt;/td&gt;\t\t&lt;td&gt;表格单元格4&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;表格单元格5&lt;/td&gt;\t\t&lt;td&gt;表格单元格6&lt;/td&gt;\t&lt;/tr&gt;&lt;/table&gt;&lt;table border=&quot;1px&quot;&gt;\t&lt;tr&gt;\t\t&lt;td colspan=&quot;2&quot;&gt;单元格1和2&lt;/td&gt;\t\t&lt;td rowspan=&quot;2&quot;&gt;单元格3和8&lt;/td&gt;\t\t&lt;td&gt;单元格4&lt;/td&gt;\t\t&lt;td&gt;单元格5&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;单元格6&lt;/td&gt;\t\t&lt;td&gt;单元格7&lt;/td&gt;\t\t&lt;td&gt;单元格9&lt;/td&gt;\t\t&lt;td&gt;单元格10&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;单元格11&lt;/td&gt;\t\t&lt;td&gt;单元格12&lt;/td&gt;\t\t&lt;td&gt;单元格13&lt;/td&gt;\t\t&lt;td&gt;单元格14&lt;/td&gt;\t\t&lt;td&gt;单元格15&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;单元格16 17 20 21&lt;/td&gt;\t\t&lt;td&gt;单元格18&lt;/td&gt;\t\t&lt;td&gt;单元格19&lt;/td&gt;\t\t&lt;td&gt;单元格20&lt;/td&gt;\t&lt;/tr&gt;\t&lt;tr&gt;\t\t&lt;td&gt;单元格23&lt;/td&gt;\t\t&lt;td&gt;单元格24&lt;/td&gt;\t\t&lt;td&gt;单元格25&lt;/td&gt;\t&lt;/tr&gt;&lt;/table&gt;\n\n快捷输入：\n\ntable&#x2F;tr&#x2F;td+Tab&#x2F;Enter\ntable&gt;tr*5&gt;td*5&#123;单元格&#125; 一键生成\n\n属性说明：\n\n&lt;table&gt;\nborder 边框粗细（px&#x2F;%）\nwidth 宽度（px&#x2F;%）\nheight 高度（px&#x2F;%）\n\n\n&lt;td&gt;\ncolspan 向右合并（数字）\nrowspan 向下合并（数字）\n\n\n\n\n八、表单标签示例\n&lt;form action=&quot;&quot; method=&quot;&quot; name=&quot;&quot;&gt;\tusername: &lt;input type=&quot;text&quot;&gt;\t&lt;br /&gt;\tpassword: &lt;input type=&quot;password&quot;&gt;\t&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;\n\n快捷输入：\n\nform&#x2F;input+Tab&#x2F;Enter\n\n属性说明：\n\n&lt;form&gt;\naction 服务器地址（url）\nmethod 方式：get、post\nname 表单名字\n\n\n&lt;input&gt;\ntype：text（文本）、password（密码）、submit（提交）\nvalue 自定义提交按钮文本\n\n\n\n\n九、块元素与内联元素常见块元素独占一行，可设置宽高\n\ndiv、form、h1-6、hr、p、table、ul、ol 等\n\n常见内联元素只占自身大小，不可设置宽高\n\na、b、em、i、span、strong 等\n\n内联块元素不换行，可设置宽高\n\nbutton、img、input\n\n\n十、容器元素用于封装网站结构\n旧版：使用 div 标签\n&lt;div id=&quot;header&quot;&gt;&lt;/div&gt;&lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;&lt;div id=&quot;article&quot;&gt;\t&lt;div id=&quot;section&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;silder&quot;&gt;&lt;/div&gt;&lt;div id=&quot;footer&quot;&gt;&lt;/div&gt;\n\n新版：使用语义化标签（利于SEO）\n&lt;header&gt;&lt;/header&gt;&lt;nav&gt;&lt;/nav&gt;&lt;article&gt;\t&lt;section&gt;&lt;/section&gt;&lt;/article&gt;&lt;aside&gt;&lt;/aside&gt;&lt;footer&gt;&lt;/footer&gt;\n","categories":["学习笔记","前端"],"tags":["HTML"]},{"title":"CSS 笔记","url":"/2025/06/01/notes/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/css/","content":"目录\n一、选择器\n二、字体属性\n三、背景属性\n四、文本属性\n五、表格属性\n六、关系选择器\n七、盒子模型\n八、弹性盒子模型\n九、浮动\n十、定位\n十一、CSS3 新特性\n十二、动画\n十三、媒体查询\n十四、CSS Sprite\n十五、字体图标\n\n\n一、选择器\n注：以下 CSS 代码和 HTML 标签不在同一代码块下\n\n1.1 全局选择器* &#123; /* 属性 */ &#125;\n\n作用于所有标签\n\n1.2 元素选择器p &#123; /* 属性 */ &#125;\n\n作用于所有 p 标签\n\n1.3 类选择器.oneclass &#123; /* 属性1 */ &#125;.twoclass &#123; /* 属性2 */ &#125;\n&lt;p class=&quot;oneclass&quot;&gt;属性1生效&lt;/p&gt;&lt;p class=&quot;twoclass&quot;&gt;属性2生效&lt;/p&gt;&lt;p class=&quot;oneclass twoclass&quot;&gt;属性1和属性2都生效&lt;/p&gt;\n\n作用于带特定 class 属性的元素，多个 class 用空格分隔\n\n1.4 ID 选择器#text &#123; /* 属性 */ &#125;\n&lt;p id=&quot;text&quot;&gt;&lt;/p&gt;\n\n作用于唯一的 id 属性元素\n\n1.5 合并选择器p, h3 &#123; /* 属性 */ &#125;.class, #text &#123; /* 属性 */ &#125;\n\n用逗号分隔多个选择器\n\n\n1.6 选择器优先级\n\n\n类型\n权重\n\n\n\n元素选择器\n1\n\n\n类选择器\n10\n\n\nID 选择器\n100\n\n\n内联样式\n1000\n\n\n优先级顺序： 内联 &gt; ID &gt; 类 &gt; 元素\n\n二、字体属性2.1 colorcolor: blue;color: #0000ff;color: rgb(0,0,0);color: rgba(0,0,0,0.5);\n\nrgba() 的 a 表示透明度，范围 0~1\n\n2.2 font-sizefont-size: 12px;\n\n最小支持 12px\n\n2.3 font-weightfont-weight: normal;\n\nnormal 默认（400）bold 粗体（700）bolder 更粗lighter 更细100~900 自定义\n\n2.4 font-stylefont-style: normal;\n\nnormal 默认italic 斜体\n\n2.5 font-familyfont-family: &quot;微软雅黑&quot;;\n\n\n三、背景属性3.1 background-color\n设置背景色，类似 color\n\n3.2 background-imagebackground-image: url(&quot;图片地址&quot;);\n\n3.3 background-repeatbackground-repeat: no-repeat;\n\n图片重复方式：repeat-x 横向重复repeat-y 纵向重复no-repeat 不重复\n\n3.4 background-sizebackground-size: 100% 100%;\n\n设置背景图片大小length 指定数值percentage 百分比cover 保持比例填满容器（可能裁剪）contain 保持比例最大化（不裁剪）\n\n3.5 background-positionbackground-position: left top;\n\n设置图片起始位置，默认 0% 0%常用值：left top、center center、right bottom也可自定义：x% y% 或 xpos ypos\n\n\n四、文本属性4.1 text-align\n文本水平对齐方式：left 左对齐、right 右对齐、center 居中\n\n4.2 text-decoration\n文本修饰：underline 下划线、overline 上划线、line-through 删除线\n\n4.3 text-transform\n控制文本大小写：capitalize 首字母大写、uppercase 全部大写、lowercase 全部小写\n\n4.4 text-indent\n首行缩进，可为负值\n\n\n五、表格属性5.1 bordertable, td &#123; border: 1px solid red; &#125;\n\n边框：大小、线条、颜色\n\n5.2 border-collapse\ncollapse 折叠边框，合并双边框\n\n5.3 width height\n设置表格宽度和高度\n\n5.4 text-align\n表格内文本水平对齐：left、right、center\n\n5.5 vertical-align\n单元格内文本垂直对齐：top、bottom、middle\n\n5.6 padding\n单元格内文本与边框的距离\n\n\n六、关系选择器6.1 后代选择器ul li &#123; /* 属性 */ &#125;\n&lt;ul&gt;    &lt;li&gt;列表1&lt;/li&gt;    &lt;li&gt;列表2&lt;/li&gt;    &lt;li&gt;列表3&lt;/li&gt;&lt;/ul&gt;\n\n选择 ul 内所有 li 标签，语法：E F &#123;&#125;\n\n6.2 子代选择器div &gt; p &#123; /* 属性 */ &#125;\n&lt;div&gt;    &lt;p&gt;选中&lt;/p&gt;    &lt;ul&gt;        &lt;li&gt;&lt;p&gt;未选中&lt;/p&gt;&lt;/li&gt;    &lt;/ul&gt;&lt;/div&gt;\n\n选择 div 的直接子元素 p，语法：E &gt; F &#123;&#125;\n\n6.3 相邻兄弟选择器h1 + p &#123; /* 属性 */ &#125;\n&lt;p&gt;未选中&lt;/p&gt;&lt;h1&gt;XXXX&lt;/h1&gt;&lt;p&gt;选中&lt;/p&gt;&lt;p&gt;未选中&lt;/p&gt;\n\n选择紧跟在 h1 后的第一个 p，语法：E + F &#123;&#125;\n\n6.4 通用兄弟选择器h1 ~ p &#123; /* 属性 */ &#125;\n&lt;p&gt;未选中&lt;/p&gt;&lt;h1&gt;XXXX&lt;/h1&gt;&lt;h2&gt;未选中&lt;/h2&gt;&lt;p&gt;选中&lt;/p&gt;&lt;p&gt;选中&lt;/p&gt;\n\n选择 h1 后所有兄弟 p，语法：E ~ F &#123;&#125;\n\n\n七、盒子模型\n所有 HTML 元素都可视为盒子盒模型包括：margin 外边距、border 边框、padding 内边距、content 内容区\n\n\n两个值时，第一个为上下，第二个为左右\n可用 -left、-right、-top、-bottom 单独设置方向\n\n\n八、弹性盒子模型8.1 容器属性\ndisplay: flex 启用弹性盒子布局\nflex-direction 元素排列方向（row&#x2F;row-reverse&#x2F;column&#x2F;column-reverse）\njustify-content 主轴对齐方式（flex-start&#x2F;center&#x2F;space-between 等）\nalign-items 交叉轴对齐方式（flex-start&#x2F;center&#x2F;stretch 等）\n\n8.2 子元素属性\nflex 子元素伸缩比例，设置后宽度不再生效\n\n\n九、浮动9.1 设置浮动\nfloat: left/right/none/inherit  使元素脱离文档流，向左或右浮动\n\n9.2 清除浮动\nclear: left/right/both 控制元素与浮动元素的布局\noverflow: hidden/auto/scroll 创建 BFC，清除浮动影响\n\n9.3 伪元素清除浮动.clearfix::after &#123;    content: &quot;&quot;;    display: block;    clear: both;&#125;\n\n\n十、定位10.1 相对定位position: relative;top: 0;left: 0;\n\n相对于自身原位置偏移，仍占原空间\n\n10.2 绝对定位position: absolute;top: 0;left: 0;\n\n脱离文档流，相对于最近的定位父元素定位\n\n10.3 固定定位position: fixed;top: 0;left: 0;\n\n脱离文档流，固定在浏览器窗口\n\n10.4 堆叠顺序z-index: 1;\n\n控制元素堆叠顺序，仅对定位元素有效\n\n\n十一、CSS3 新特性11.1 圆角border-radius: 10px;\n\n可设置单值、两个值、三个值、四个值或百分比\n\n11.2 阴影box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n\n设置阴影的水平&#x2F;垂直偏移、模糊半径、颜色可设置多个阴影，inset 表示内阴影\n\n11.3 透明度opacity: 0.5;\n\n\n十二、动画12.1 @keyframes 关键帧动画@keyframes animation-name &#123;    0% &#123; background-color: red; &#125;    50% &#123; background-color: blue; &#125;    100% &#123; background-color: red; &#125;&#125;div &#123;    width: 100px;    height: 100px;    background-color: red;    animation: animation-name 2s linear 0s infinite normal;&#125;div:hover &#123;    animation-play-state: paused;&#125;\n\n\nanimation: name duration timing-function delay iteration-count direction;  \n\nname 动画名称  \nduration 持续时间  \ntiming-function 速度曲线（ease、linear、ease-in、ease-out、ease-in-out）  \ndelay 延迟时间  \niteration-count 循环次数  \ndirection 方向（normal、reverse、alternate）\n\n\n\n十三、媒体查询\n根据设备特性应用不同样式\n\n13.1 设置 meta 标签&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;&gt;\n\n13.2 语法@media media-type and (condition) &#123;    /* CSS 规则 */&#125;\n\n13.3 示例@media screen and (max-width: 768px) &#123;    body &#123; background-color: lightblue; &#125;&#125; /* 手机屏幕 */@media screen and (min-width: 769px) and (max-width: 996px) &#123;    body &#123; background-color: lightgreen; &#125;&#125; /* 平板屏幕 */@media screen and (min-width: 997px) &#123;    body &#123; background-color: lightcoral; &#125;&#125; /* 电脑屏幕 */\n\n根据屏幕宽度设置不同背景色\n\n\n十四、CSS Sprite\n将多个图像合并为一个，减少 HTTP 请求，提高加载速度。通过 background-image 和 background-position 显示不同部分。\n\n.sprite &#123;    background-image: url(&#x27;sprite.png&#x27;);    width: 100px;  /* 单个图像宽度 */    height: 100px; /* 单个图像高度 */&#125;.icon1 &#123; background-position: 0 0; &#125;.icon2 &#123; background-position: -100px 0; &#125;.icon3 &#123; background-position: -200px 0; &#125;\n\n.sprite 定义精灵图和尺寸，.icon1、.icon2、.icon3 定位不同图像\n\n\n十五、字体图标&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css&quot;&gt;\n\n在 &lt;head&gt; 标签中引入 Font Awesome\n\n&lt;i class=&quot;fa fa-camera-retro&quot;&gt;&lt;/i&gt; &lt;!-- 相机图标 --&gt;&lt;i class=&quot;fa fa-heart&quot;&gt;&lt;/i&gt;        &lt;!-- 心形图标 --&gt;&lt;i class=&quot;fa fa-star&quot;&gt;&lt;/i&gt;         &lt;!-- 星形图标 --&gt;\n\n","categories":["学习笔记","前端"],"tags":["CSS"]},{"title":"JavaScript 笔记（正在施工中）","url":"/2025/06/01/notes/%E7%BB%9F%E4%B8%80%E9%A3%8E%E6%A0%BC/js/","content":"目录巡查施工状况  一、JavaScript 引入方式二、JavaScript 输出三、数据类型四、typeof 运算符五、补充说明六、字符串七、数组八、对象与内置对象九、DOM 操作  \n\n一、JavaScript 引入方式\n推荐在 &lt;body&gt; &lt;/body&gt; 标签内引入\n\n\n嵌入到 HTML\n &lt;script&gt;    // JavaScript 代码    console.log(&quot;Hello, World!&quot;);&lt;/script&gt;\n\n引入本地 JavaScript 文件\n &lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;\n\n引入网络 JavaScript 文件\n &lt;script src=&quot;https://example.com/script.js&quot;&gt;&lt;/script&gt;\n\n\n二、JavaScript 输出\nalert()\n alert(&quot;Hello, World!&quot;);\n\n弹出警告框\n\n\nconsole.log()\n console.log(&quot;Hello, World!&quot;);\n\n控制台输出\n\n\ndocument.write()\n document.write(&quot;Hello, World!&quot;);\n\n页面输出（不推荐页面加载后使用）\n\n\n\n\n三、数据类型\n基本数据类型\n\nNumber：数字\nString：字符串\nBoolean：布尔\nUndefined：未定义\nNull：空\nSymbol：唯一值\n\n\n引用数据类型\n\nObject：对象\nArray：数组\nFunction：函数\n\n\n\n\n四、typeof 运算符\n判断数据类型\n\ntypeof 123; // &quot;number&quot;typeof &quot;abc&quot;; // &quot;string&quot;typeof true; // &quot;boolean&quot;typeof &#123;a:1&#125;; // &quot;object&quot;typeof [1,2,3]; // &quot;object&quot;typeof null; // &quot;object&quot;typeof undefined; // &quot;undefined&quot;\n\n\nnull 一般代表对象不存在，undefined 代表变量未定义\n\n\n五、补充说明\n比较运算符\n\n=== 和 !==：严格相等&#x2F;不等（不做类型转换）\n== 和 !=：宽松相等&#x2F;不等（会做类型转换）\n\n\nfor in 遍历对象\n const obj = &#123;name: &quot;Alice&quot;, age: 30&#125;;for (const key in obj) &#123;    console.log(key, obj[key]);&#125;\n\n\n六、字符串\n引号嵌套与转义\n\n单引号&#x2F;双引号等价，可互相嵌套\n内部引号需转义 \\\n多行字符串可用 \\ 续行\n\n\n常用属性与方法\n\nlength：字符串长度\ncharAt(n)：返回指定位置字符\nconcat()：拼接字符串\nsubstring(start, end)：截取子串\nsubstr(start, length)：截取指定长度子串\nindexOf(str, fromIndex)：查找子串位置\ntrim() &#x2F; trimStart() &#x2F; trimEnd()：去除空白\nsplit(separator, limit)：分割为数组\n\n\n\n\n七、数组\n定义\n let arr = [1, 2, 3];let arr2 = [];arr2[0] = &quot;a&quot;;\n\n属性\n\nlength：数组长度\n\n\n常用方法\n\nArray.isArray(arr)：判断是否为数组\npush() &#x2F; pop()：末尾添加&#x2F;删除\nshift() &#x2F; unshift()：头部添加&#x2F;删除\njoin(separator)：数组转字符串\nconcat()：合并数组\nreverse()：反转数组\nindexOf(item, fromIndex)：查找元素索引\n\n\n\n\n八、对象与内置对象\n对象定义\n let user = &#123;    name: &quot;mingming&quot;,    age: 19,    getName: function() &#123;        console.log(this.name);    &#125;,    container: &#123;        width: 100,        height: 200,        getWidth: function() &#123; return this.width; &#125;,        getHeight: function() &#123; return this.height; &#125;    &#125;&#125;;\n\nMath 对象\n\nMath.abs(x)：绝对值\nMath.max(a, b, ...) &#x2F; Math.min(a, b, ...)：最大&#x2F;最小值\nMath.ceil(x) &#x2F; Math.floor(x) &#x2F; Math.round(x)：向上&#x2F;下&#x2F;四舍五入\nMath.random()：0~1 随机数\n\n\nDate 对象\n\nDate.now()：当前时间戳（毫秒）\nnew Date()：当前时间对象\n常用方法：getTime(), getFullYear(), getMonth(), getDate(), getHours(), getMinutes(), getSeconds(), getDay()\n\n\n\n\n九、DOM 操作\n节点类型\n\n\n\n节点类型\nnodeType\n描述\n示例\n\n\n\n元素节点\n1\nHTML 元素\n&lt;div&gt;\n\n\n文本节点\n3\n文本内容\n“Hello”\n\n\n注释节点\n8\n注释\n&lt;!-- comment --&gt;\n\n\n文档节点\n9\n整个文档入口\ndocument\n\n\n文档类型节点\n10\nDOCTYPE 声明\n&lt;!DOCTYPE html&gt;\n\n\n\n查询节点\n\ngetElementById(id)\ngetElementsByTagName(tag)\ngetElementsByClassName(class)\nquerySelector(selector)\nquerySelectorAll(selector)\n\n\n节点关系\n\nparentNode：父节点\nchildren：子元素节点集合\nfirstElementChild &#x2F; lastElementChild\npreviousElementSibling &#x2F; nextElementSibling\n\n\n节点操作\n\n创建：createElement, createTextNode, createDocumentFragment\n插入：appendChild, insertBefore, prepend\n修改内容：textContent, innerHTML\n属性操作：setAttribute, getAttribute, removeAttribute\n样式操作：style, classList\n删除：remove(), removeChild()\n\n\n\n\n\n由于已学习其他静态语言，基础内容略，重点记录 JavaScript 特有语法和动态特性。\n\n\n\n\n\n\n🚧 JavaScript施工前线报告  \n核心战区  \n\nundefined与null的终极对决仍在胶着中，预计胜负揭晓时间：当我能分清==和===的区别时4  \ntypeof null返回”object”的宇宙级谜题：官方认证彩蛋，设计师下班前5分钟的”杰作”4\n\n高危区域  \n\n异步回调地狱：Promise救援队已空降，async&#x2F;await直升机正在架设安全网8  \nthis指向迷宫：箭头函数特工队已潜入，.bind()特种部队随时待命9\n\n工程事故  \n\n闭包施工现场惊现时空裂缝！函数正在偷渡外部变量，安保级别升至红色警戒10  \n==类型转换魔术表演区紧急关闭：演员[] == ![]后台斗殴（结果竟是true！）4\n\n安全提示遇到undefined is not a function请勿惊慌，这只是JS在玩捉迷藏👻施工队长留言：乐高积木（数据类型）已备齐，说明书（DOM操作）被猫抓花了🐾\n\n\n","categories":["学习笔记","前端"],"tags":["JavaScript"]}]